package lexer;

public enum TokenType {
    EOF,

    IMPORT,
    VARIABLE, CONSTANT,
    FUNCTION, OBJECT,

    RETURN,

    TRY, CATCH, THROW,
    IF, ELSE, ELIF,
    SWITCH, DEFAULT, CASE, SWITCH_BREAK, SWITCH_GOTO,

    FOR, OF, WHILE, LOOP_BREAK, LOOP_CONTINUE,
    IDENTIFIER,
    NUMBER_TYPE, BOOLEAN_TYPE, STRING_TYPE, VOID_TYPE,

    L_PAREN, R_PAREN, L_CURLY_BRACE, R_CURLY_BRACE, L_BRACE, R_BRACE,
    EQUALS, COMMA, MINUS_R_ANGLE_BAR, DOT, COLON, SEMICOLON,

    // LOGICAL AND BITWISE OPERATORS
    EXCLAMATION, DOUBLE_AMPERSAND, DOUBLE_PIPE, CARAT, AMPERSAND, PIPE,

    // RELATIONAL AND EQUALITY OPERATORS
    DOUBLE_EQUALS, EXCLAMATION_EQUALS, L_ANGLE_BAR, R_ANGLE_BAR, L_ANGLE_BAR_EQUALS, R_ANGLE_BAR_EQUALS,

    // SHIFTING OPERATORS
    DOUBLE_L_ANGLE_BAR, DOUBLE_R_ANGLE_BAR,

    // ARITHMETIC OPERATORS
    PLUS, MINUS, STAR, FORWARD_SLASH, PERCENT, DOUBLE_STAR,

    // INCREMENTATION OPERATOR
    DOUBLE_PLUS, DOUBLE_MINUS,

    STRING_LITERAL, NUMBER_LITERAL, BOOLEAN_LITERAL, NULL_LITERAL
}
